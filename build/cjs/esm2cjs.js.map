{
  "version": 3,
  "sources": ["../../src/esm2cjs.ts"],
  "sourcesContent": ["import path from \"path\";\nimport { BuildOptions, build } from \"esbuild\";\nimport fs from \"fs-extra\";\nimport glob from \"tiny-glob\";\n\nexport interface ESM2CJSOptions {\n\tinDir: string;\n\toutDir: string;\n\tcleanOutDir?: boolean;\n\tglobs?: string | string[];\n\tsourcemap?: boolean;\n\tlogLevel?: BuildOptions[\"logLevel\"];\n\tplatform?: BuildOptions[\"platform\"];\n\ttarget?: BuildOptions[\"target\"];\n\twritePackageJson?: boolean;\n}\n\nexport async function esm2cjs({\n\tinDir,\n\toutDir,\n\tglobs = [\"**/*.js\"],\n\tsourcemap = true,\n\tlogLevel = \"warning\",\n\tplatform = \"node\",\n\ttarget = \"node18\",\n\tcleanOutDir = false,\n\twritePackageJson = true,\n}: ESM2CJSOptions) {\n\t// Clean the output dir if necessary\n\tif (cleanOutDir) await fs.emptyDir(outDir);\n\n\t// Figure out what to compile\n\tif (typeof globs === \"string\") globs = [globs];\n\tconst entryPoints = (\n\t\tawait Promise.all(globs.map((g) => glob(g, { cwd: inDir })))\n\t).reduce((prev, cur) => [...prev, ...cur], []);\n\n\t// Compile ESM to CJS using esbuild\n\tawait build({\n\t\tabsWorkingDir: inDir,\n\t\tentryPoints,\n\t\toutdir: outDir,\n\t\tbundle: false,\n\t\tminify: false,\n\t\tsourcemap,\n\t\tlogLevel,\n\t\tplatform,\n\t\tformat: \"cjs\",\n\t\ttarget,\n\t\tdefine: {\n\t\t\t\"import.meta.url\": \"__import_meta_url\",\n\t\t},\n\t\tinject: [path.join(__dirname, \"shims/import.meta.url/shim.js\")],\n\t});\n\n\t// If desired, define the module type of each build directory separately\n\tif (writePackageJson) {\n\t\tawait fs.writeJSON(\n\t\t\tpath.join(inDir, \"package.json\"),\n\t\t\t{ type: \"module\" },\n\t\t\t{\n\t\t\t\tspaces: 4,\n\t\t\t},\n\t\t);\n\t\tawait fs.writeJSON(\n\t\t\tpath.join(outDir, \"package.json\"),\n\t\t\t{ type: \"commonjs\" },\n\t\t\t{\n\t\t\t\tspaces: 4,\n\t\t\t},\n\t\t);\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;AAAA,kBAAiB;AACjB,qBAAoC;AACpC,sBAAe;AACf,uBAAiB;AAcjB,eAAsB,QAAQ,EAC7B,OACA,QACA,QAAQ,CAAC,SAAS,GAClB,YAAY,MACZ,WAAW,WACX,WAAW,QACX,SAAS,UACT,cAAc,OACd,mBAAmB,KAAI,GACP;AAEhB,MAAI;AAAa,UAAM,gBAAAA,QAAG,SAAS,MAAM;AAGzC,MAAI,OAAO,UAAU;AAAU,YAAQ,CAAC,KAAK;AAC7C,QAAM,eACL,MAAM,QAAQ,IAAI,MAAM,IAAI,CAAC,UAAM,iBAAAC,SAAK,GAAG,EAAE,KAAK,MAAK,CAAE,CAAC,CAAC,GAC1D,OAAO,CAAC,MAAM,QAAQ,CAAC,GAAG,MAAM,GAAG,GAAG,GAAG,CAAA,CAAE;AAG7C,YAAM,sBAAM;IACX,eAAe;IACf;IACA,QAAQ;IACR,QAAQ;IACR,QAAQ;IACR;IACA;IACA;IACA,QAAQ;IACR;IACA,QAAQ;MACP,mBAAmB;;IAEpB,QAAQ,CAAC,YAAAC,QAAK,KAAK,WAAW,+BAA+B,CAAC;GAC9D;AAGD,MAAI,kBAAkB;AACrB,UAAM,gBAAAF,QAAG,UACR,YAAAE,QAAK,KAAK,OAAO,cAAc,GAC/B,EAAE,MAAM,SAAQ,GAChB;MACC,QAAQ;KACR;AAEF,UAAM,gBAAAF,QAAG,UACR,YAAAE,QAAK,KAAK,QAAQ,cAAc,GAChC,EAAE,MAAM,WAAU,GAClB;MACC,QAAQ;KACR;;AAGJ;",
  "names": ["fs", "glob", "path"]
}
